
+ 1 Создать двух пользователей (с помощью метода User.objects.create_user('username'))

us1 = User.objects.create_user(username='Den')
us2 = User.objects.create_user(username='Ned')


+ 2 Создать два объекта модели Author, связанные с пользователями

Author.objects.create(authorUser=us1)
Author.objects.create(authorUser=us2)


+ 3 Добавить 4 категории в модель Category.

Category.objects.create(name='IT')
Category.objects.create(name='JS')
Category.objects.create(name='Python')
Category.objects.create(name='AI')


+ 4 Добавить 2 статьи и 1 новость

Post.objects.create(author=author, categoryType='AR', title='SDFDSjl', text="dfjsldkjsl lksdjfweijds kjfsldkfjs;")

Post.objects.create(author=author2, categoryType='AR', title='HDFGDtdf', text="Fkd;flgdfg dfkgd;lftj dfgjdlfk")

Post.objects.create(author=author, categoryType='NW', title='Rdfgdfdfg', text="qqwejlkjcvd,g gfjgjdlfkgjdlfk  jdflkgjdflkgj")


+ 5 Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).

Post.objects.get(id=1).postCategory.add(Category.objects.get(id=1))
Post.objects.get(id=2).postCategory.add(Category.objects.get(id=2))
Post.objects.get(id=3).postCategory.add(Category.objects.get(id=3))
Post.objects.get(id=3).postCategory.add(Category.objects.get(id=4))


+ 6 Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).

Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text='sdfsdfsdfsdfsdfsdf')
Comment.objects.create(commentPost=Post.objects.get(id=2), commentUser=Author.objects.get(id=2).authorUser, text='hjjgnbmhjuf')
Comment.objects.create(commentPost=Post.objects.get(id=3), commentUser=Author.objects.get(id=1).authorUser, text='gnftgyhhhfghfghf')
Comment.objects.create(commentPost=Post.objects.get(id=3), commentUser=Author.objects.get(id=2).authorUser, text='hfghfgyesdfsdr')


+ 7 Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.

Comment.objects.get(id=1).like()
Comment.objects.get(id=1).like()
Comment.objects.get(id=1).like()
Comment.objects.get(id=1).like()
Comment.objects.get(id=1).like()
Comment.objects.get(id=1).dislike()
Comment.objects.get(id=2).like()
Comment.objects.get(id=1).like()
Comment.objects.get(id=2).like()
Comment.objects.get(id=2).like()
Comment.objects.get(id=2).like()
Comment.objects.get(id=2).dislike()


+ 8 Обновить рейтинги пользователей

Author.objects.get(id=1).update_rating()
Author.objects.get(id=2).update_rating()


+ 9 Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).

Author.objects.all().order_by('-ratingAuthor')[:1]
Author.objects.all().order_by('-ratingAuthor').values('authorUser','ratingAuthor')[:1]


+ 10 Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье

Post.objects.all().order_by('-rating').values('dateCreation', 'author', 'rating', 'title', 'text')[:1]
Post.objects.all().order_by('-rating')[0].preview()


+ 11 Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье

Post.objects.all().order_by('-rating')[0].id
Comment.objects.filter(commentPost=Post.objects.get(id=Post.objects.all().order_by('-rating')[0].id)).values('dateCreation', 'commentUser', 'rating', 'text')









